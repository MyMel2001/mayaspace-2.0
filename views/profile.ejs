<!DOCTYPE html>
<html lang="en" data-theme="light">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="/style.css">
    <script src="/js/aprilfools.js" defer></script>
    <% if (user.customCss) { %>
        <style><%- user.customCss %></style>
    <% } %>
</head>
<body>
    <%- include('partials/navbar') %>
    
    <main>
        <div class="container">
            <!-- Profile Header -->
            <div class="card">
                <div class="profile-header">
                    <div class="profile-info">
                        <h1><%= user.displayName || user.username %></h1>
                        <p class="profile-username">@<%= user.username %>@<%= DOMAIN %></p>
                        <% if (user.bio) { %>
                            <p class="profile-bio"><%= user.bio %></p>
                        <% } %>
                    </div>
                    
                    <% if (sessionUser && sessionUser.username !== user.username) { %>
                        <div class="profile-actions">
                            <button class="btn btn-primary" onclick="followUser('<%= user.actor.id %>')">
                                Follow
                            </button>
                        </div>
                    <% } %>
                    
                    <% if (sessionUser && sessionUser.username === user.username) { %>
                        <div class="profile-actions">
                            <a href="/settings" class="btn btn-secondary">Edit Profile</a>
                        </div>
                    <% } %>
                </div>
                
                <div class="profile-stats">
                    <div class="stat">
                        <span class="stat-number"><%= posts.length %></span>
                        <span class="stat-label">Posts</span>
                    </div>
                    <div class="stat">
                        <span class="stat-number">0</span>
                        <span class="stat-label">Following</span>
                    </div>
                    <div class="stat">
                        <span class="stat-number">0</span>
                        <span class="stat-label">Followers</span>
                    </div>
                </div>
            </div>
            
            <!-- User Posts -->
            <section>
                <h2><%= user.displayName || user.username %>'s Posts</h2>
                
                <% if (posts.length === 0) { %>
                    <div class="card text-center">
                        <p style="color: var(--text-muted);">No posts yet!</p>
                        <% if (sessionUser && sessionUser.username === user.username) { %>
                            <a href="/" class="btn btn-primary">Create your first post</a>
                        <% } %>
                    </div>
                <% } else { %>
                    <% posts.forEach(post => { %>
                        <article class="post" data-post-id="<%= post.id %>">
                            <div class="post-header">
                                <div class="post-author">
                                    <a href="/u/<%= post.author %>"><%= post.author %></a>
                                    <span class="post-time"><%= new Date(post.createdAt).toLocaleString() %></span>
                                </div>
                            </div>
                            
                            <div class="post-content">
                                <%= post.content %>
                            </div>
                            
                            <% if (post.attachment) { %>
                                <div class="post-media">
                                    <% if (post.attachment.mediaType.startsWith('image/')) { %>
                                        <img src="<%= post.attachment.url.replace('https://' + DOMAIN, '') %>" alt="User upload">
                                    <% } else if (post.attachment.mediaType.startsWith('video/')) { %>
                                        <video src="<%= post.attachment.url.replace('https://' + DOMAIN, '') %>" controls></video>
                                    <% } %>
                                </div>
                            <% } %>
                            
                            <% if (sessionUser) { %>
                            <div class="post-actions">
                                <button class="post-action like-btn" data-action="like">
                                    <span>üëç</span>
                                    <span class="like-count"><%= post.likes || 0 %></span>
                                </button>
                                <button class="post-action dislike-btn" data-action="dislike">
                                    <span>üëé</span>
                                    <span class="dislike-count"><%= post.dislikes || 0 %></span>
                                </button>
                                <button class="post-action" onclick="toggleReply('<%= post.id %>')">
                                    <span>üí¨</span>
                                    <span>Reply</span>
                                </button>
                                                                 <% if (post.blueskyWebUrl || post.blueskyUri) { %>
                                     <a href="<%= post.blueskyWebUrl || post.blueskyUri %>" target="_blank" class="post-action" style="text-decoration: none;">
                                         <span>ü¶ã</span>
                                         <span>View on Bluesky</span>
                                     </a>
                                 <% } %>
                            </div>
                            
                            <!-- Reply form (initially hidden) -->
                            <div id="reply-<%= post.id %>" class="reply-form hidden">
                                <form action="/reply" method="POST">
                                    <input type="hidden" name="postId" value="<%= post.id %>">
                                    <textarea name="content" placeholder="Write a reply..." rows="3"></textarea>
                                    <button type="submit" class="btn btn-primary btn-sm">Reply</button>
                                </form>
                            </div>
                            <% } %>
                        </article>
                    <% }) %>
                <% } %>
            </section>
        </div>
    </main>
    
    <script>
        // Load saved theme
        const savedTheme = localStorage.getItem('theme') || 'light';
        document.documentElement.setAttribute('data-theme', savedTheme);
        
        // Dark mode toggle
        function toggleTheme() {
            const html = document.documentElement;
            const currentTheme = html.getAttribute('data-theme');
            const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
            html.setAttribute('data-theme', newTheme);
            localStorage.setItem('theme', newTheme);
        }
        
        // Like/dislike functionality (same as home page)
        document.addEventListener('click', async function(e) {
            if (e.target.closest('.like-btn, .dislike-btn')) {
                const button = e.target.closest('.post-action');
                const action = button.dataset.action;
                const postId = button.closest('.post').dataset.postId;
                
                try {
                    const response = await fetch('/api/posts/react', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ postId, action })
                    });
                    
                    if (response.ok) {
                        const result = await response.json();
                        updateReactionCounts(postId, result);
                    }
                } catch (error) {
                    console.error('Reaction error:', error);
                }
            }
        });
        
        function updateReactionCounts(postId, data) {
            const post = document.querySelector(`[data-post-id="${postId}"]`);
            const likeCount = post.querySelector('.like-count');
            const dislikeCount = post.querySelector('.dislike-count');
            
            if (likeCount) likeCount.textContent = data.likes || 0;
            if (dislikeCount) dislikeCount.textContent = data.dislikes || 0;
        }
        
        function toggleReply(postId) {
            const replyForm = document.getElementById(`reply-${postId}`);
            replyForm.classList.toggle('hidden');
        }
        
        async function followUser(userId) {
            try {
                const response = await fetch('/api/follow', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ userId })
                });
                
                if (response.ok) {
                    alert('Follow request sent!');
                    location.reload();
                }
            } catch (error) {
                console.error('Follow error:', error);
            }
        }
    </script>
    
    <style>
        .profile-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 1.5rem;
        }
        
        .profile-info h1 {
            margin-bottom: 0.5rem;
            font-size: 2rem;
        }
        
        .profile-username {
            color: var(--text-muted);
            font-size: 0.875rem;
            margin-bottom: 1rem;
        }
        
        .profile-bio {
            color: var(--text-secondary);
            line-height: 1.6;
        }
        
        .profile-stats {
            display: flex;
            gap: 2rem;
            padding-top: 1rem;
            border-top: 1px solid var(--border-color);
        }
        
        .stat {
            text-align: center;
        }
        
        .stat-number {
            display: block;
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--text-primary);
        }
        
        .stat-label {
            font-size: 0.875rem;
            color: var(--text-muted);
        }
        
        .reply-form {
            margin-top: 1rem;
            padding-top: 1rem;
            border-top: 1px solid var(--border-color);
        }
        
        .reply-form textarea {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid var(--border-color);
            border-radius: 0.5rem;
            background-color: var(--bg-secondary);
            color: var(--text-primary);
            font-family: inherit;
            margin-bottom: 0.75rem;
            resize: vertical;
        }
        
        .reply-form textarea:focus {
            outline: none;
            border-color: var(--accent-primary);
            box-shadow: 0 0 0 3px rgb(59 130 246 / 0.1);
        }
        
        .btn-sm {
            padding: 0.5rem 1rem;
            font-size: 0.8rem;
        }
        
        @media (max-width: 768px) {
            .profile-header {
                flex-direction: column;
                gap: 1rem;
            }
            
            .profile-stats {
                justify-content: space-around;
            }
        }
    </style>
</body>
</html>